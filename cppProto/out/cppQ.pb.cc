// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cppQ.proto

#include "cppQ.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace packet {
class PACKETDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PACKET>
      _instance;
} _PACKET_default_instance_;
class _ACTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_ACT>
      _instance;
} __ACT_default_instance_;
class _ALIVEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_ALIVE>
      _instance;
} __ALIVE_default_instance_;
class _CHANGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_CHANGE>
      _instance;
} __CHANGE_default_instance_;
class _OPEARATIONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_OPEARATION>
      _instance;
} __OPEARATION_default_instance_;
class _QUERYDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_QUERY>
      _instance;
} __QUERY_default_instance_;
class _QUERY_RESPONSEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<_QUERY_RESPONSE>
      _instance;
} __QUERY_RESPONSE_default_instance_;
}  // namespace packet
namespace protobuf_cppQ_2eproto {
void InitDefaultsPACKETImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::_PACKET_default_instance_;
    new (ptr) ::packet::PACKET();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::PACKET::InitAsDefaultInstance();
}

void InitDefaultsPACKET() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPACKETImpl);
}

void InitDefaults_ACTImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::__ACT_default_instance_;
    new (ptr) ::packet::_ACT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::_ACT::InitAsDefaultInstance();
}

void InitDefaults_ACT() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults_ACTImpl);
}

void InitDefaults_ALIVEImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::__ALIVE_default_instance_;
    new (ptr) ::packet::_ALIVE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::_ALIVE::InitAsDefaultInstance();
}

void InitDefaults_ALIVE() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults_ALIVEImpl);
}

void InitDefaults_CHANGEImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::__CHANGE_default_instance_;
    new (ptr) ::packet::_CHANGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::_CHANGE::InitAsDefaultInstance();
}

void InitDefaults_CHANGE() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults_CHANGEImpl);
}

void InitDefaults_OPEARATIONImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::__OPEARATION_default_instance_;
    new (ptr) ::packet::_OPEARATION();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::_OPEARATION::InitAsDefaultInstance();
}

void InitDefaults_OPEARATION() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults_OPEARATIONImpl);
}

void InitDefaults_QUERYImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::__QUERY_default_instance_;
    new (ptr) ::packet::_QUERY();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::_QUERY::InitAsDefaultInstance();
}

void InitDefaults_QUERY() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults_QUERYImpl);
}

void InitDefaults_QUERY_RESPONSEImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::packet::__QUERY_RESPONSE_default_instance_;
    new (ptr) ::packet::_QUERY_RESPONSE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::_QUERY_RESPONSE::InitAsDefaultInstance();
}

void InitDefaults_QUERY_RESPONSE() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaults_QUERY_RESPONSEImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::PACKET, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::PACKET, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::PACKET, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::PACKET, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::PACKET, code_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ACT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ACT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ACT, operational_local_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ACT, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ACT, error_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ALIVE, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ALIVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_ALIVE, session_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_CHANGE, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_CHANGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_CHANGE, obiect_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_OPEARATION, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_OPEARATION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_OPEARATION, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_OPEARATION, operation_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_OPEARATION, operational_local_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY, object_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY_RESPONSE, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY_RESPONSE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY_RESPONSE, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::_QUERY_RESPONSE, object_id_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::packet::PACKET)},
  { 9, 17, sizeof(::packet::_ACT)},
  { 20, 26, sizeof(::packet::_ALIVE)},
  { 27, 33, sizeof(::packet::_CHANGE)},
  { 34, 42, sizeof(::packet::_OPEARATION)},
  { 45, 52, sizeof(::packet::_QUERY)},
  { 54, 61, sizeof(::packet::_QUERY_RESPONSE)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_PACKET_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::__ACT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::__ALIVE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::__CHANGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::__OPEARATION_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::__QUERY_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::__QUERY_RESPONSE_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cppQ.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ncppQ.proto\022\006packet\"\264\001\n\006PACKET\022\'\n\004type\030"
      "\001 \002(\0162\031.packet.PACKET.PacketType\022\014\n\004code"
      "\030\002 \002(\005\"l\n\nPacketType\022\010\n\004_ACK\020\001\022\n\n\006_ALIVE"
      "\020\002\022\013\n\007_CHANGE\020\003\022\n\n\006_LOGIN\020\004\022\016\n\n_OPERATIO"
      "N\020\005\022\n\n\006_QUERY\020\006\022\023\n\017_QUERY_RESPONSE\020\007*\005\010d"
      "\020\227\001\"p\n\004_ACT\022\034\n\024operational_local_id\030\001 \002("
      "\005\022\017\n\007success\030\002 \001(\t\022\r\n\005error\030\003 \001(\t2*\n\004typ"
      "e\022\016.packet.PACKET\030d \001(\0132\014.packet._ACT\"J\n"
      "\006_ALIVE\022\022\n\nsession_id\030\001 \002(\0052,\n\004type\022\016.pa"
      "cket.PACKET\030e \001(\0132\016.packet._ALIVE\"K\n\007_CH"
      "ANGE\022\021\n\tobiect_id\030\001 \002(\0052-\n\004type\022\016.packet"
      ".PACKET\030f \001(\0132\017.packet._CHANGE\"\221\001\n\013_OPEA"
      "RATION\022\022\n\nsession_id\030\001 \001(\005\022\035\n\025operation_"
      "description\030\002 \001(\005\022\034\n\024operational_local_i"
      "d\030\003 \001(\00521\n\004type\022\016.packet.PACKET\030g \001(\0132\023."
      "packet._OPEARATION\"]\n\006_QUERY\022\022\n\nsession_"
      "id\030\001 \002(\005\022\021\n\tobject_id\030\002 \001(\0052,\n\004type\022\016.pa"
      "cket.PACKET\030h \001(\0132\016.packet._QUERY\"o\n\017_QU"
      "ERY_RESPONSE\022\022\n\nsession_id\030\001 \002(\005\022\021\n\tobje"
      "ct_id\030\002 \001(\00525\n\004type\022\016.packet.PACKET\030i \001("
      "\0132\027.packet._QUERY_RESPONSE"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 826);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cppQ.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cppQ_2eproto
namespace packet {
const ::google::protobuf::EnumDescriptor* PACKET_PacketType_descriptor() {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cppQ_2eproto::file_level_enum_descriptors[0];
}
bool PACKET_PacketType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PACKET_PacketType PACKET::_ACK;
const PACKET_PacketType PACKET::_ALIVE;
const PACKET_PacketType PACKET::_CHANGE;
const PACKET_PacketType PACKET::_LOGIN;
const PACKET_PacketType PACKET::_OPERATION;
const PACKET_PacketType PACKET::_QUERY;
const PACKET_PacketType PACKET::_QUERY_RESPONSE;
const PACKET_PacketType PACKET::PacketType_MIN;
const PACKET_PacketType PACKET::PacketType_MAX;
const int PACKET::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PACKET::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PACKET::kTypeFieldNumber;
const int PACKET::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PACKET::PACKET()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaultsPACKET();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.PACKET)
}
PACKET::PACKET(const PACKET& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&code_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:packet.PACKET)
}

void PACKET::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
  type_ = 1;
}

PACKET::~PACKET() {
  // @@protoc_insertion_point(destructor:packet.PACKET)
  SharedDtor();
}

void PACKET::SharedDtor() {
}

void PACKET::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PACKET::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PACKET& PACKET::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaultsPACKET();
  return *internal_default_instance();
}

PACKET* PACKET::New(::google::protobuf::Arena* arena) const {
  PACKET* n = new PACKET;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PACKET::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.PACKET)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    code_ = 0;
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PACKET::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.PACKET)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .packet.PACKET.PacketType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::packet::PACKET_PacketType_IsValid(value)) {
            set_type(static_cast< ::packet::PACKET_PacketType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        if ((800u <= tag && tag < 1208u)) {
          DO_(_extensions_.ParseField(tag, input,
              internal_default_instance(),
              _internal_metadata_.mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.PACKET)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.PACKET)
  return false;
#undef DO_
}

void PACKET::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.PACKET)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .packet.PACKET.PacketType type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int32 code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // Extension range [100, 151)
  _extensions_.SerializeWithCachedSizes(
      100, 151, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.PACKET)
}

::google::protobuf::uint8* PACKET::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.PACKET)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .packet.PACKET.PacketType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int32 code = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // Extension range [100, 151)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      100, 151, deterministic, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.PACKET)
  return target;
}

size_t PACKET::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:packet.PACKET)
  size_t total_size = 0;

  if (has_code()) {
    // required int32 code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  if (has_type()) {
    // required .packet.PACKET.PacketType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t PACKET::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.PACKET)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());

    // required .packet.PACKET.PacketType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PACKET::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.PACKET)
  GOOGLE_DCHECK_NE(&from, this);
  const PACKET* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PACKET>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.PACKET)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.PACKET)
    MergeFrom(*source);
  }
}

void PACKET::MergeFrom(const PACKET& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.PACKET)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PACKET::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.PACKET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PACKET::CopyFrom(const PACKET& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.PACKET)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PACKET::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PACKET::Swap(PACKET* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PACKET::InternalSwap(PACKET* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata PACKET::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void _ACT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _ACT::kOperationalLocalIdFieldNumber;
const int _ACT::kSuccessFieldNumber;
const int _ACT::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_ACT::_ACT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaults_ACT();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet._ACT)
}
_ACT::_ACT(const _ACT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_success()) {
    success_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.success_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  operational_local_id_ = from.operational_local_id_;
  // @@protoc_insertion_point(copy_constructor:packet._ACT)
}

void _ACT::SharedCtor() {
  _cached_size_ = 0;
  success_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operational_local_id_ = 0;
}

_ACT::~_ACT() {
  // @@protoc_insertion_point(destructor:packet._ACT)
  SharedDtor();
}

void _ACT::SharedDtor() {
  success_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void _ACT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* _ACT::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const _ACT& _ACT::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaults_ACT();
  return *internal_default_instance();
}

_ACT* _ACT::New(::google::protobuf::Arena* arena) const {
  _ACT* n = new _ACT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _ACT::Clear() {
// @@protoc_insertion_point(message_clear_start:packet._ACT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!success_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*success_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*error_.UnsafeRawStringPointer())->clear();
    }
  }
  operational_local_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool _ACT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet._ACT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 operational_local_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_operational_local_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operational_local_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_success()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->success().data(), static_cast<int>(this->success().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packet._ACT.success");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packet._ACT.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet._ACT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet._ACT)
  return false;
#undef DO_
}

void _ACT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet._ACT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 operational_local_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operational_local_id(), output);
  }

  // optional string success = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->success().data(), static_cast<int>(this->success().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packet._ACT.success");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->success(), output);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packet._ACT.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet._ACT)
}

::google::protobuf::uint8* _ACT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet._ACT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 operational_local_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operational_local_id(), target);
  }

  // optional string success = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->success().data(), static_cast<int>(this->success().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packet._ACT.success");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->success(), target);
  }

  // optional string error = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packet._ACT.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet._ACT)
  return target;
}

size_t _ACT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet._ACT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 operational_local_id = 1;
  if (has_operational_local_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->operational_local_id());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->success());
    }

    // optional string error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _ACT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet._ACT)
  GOOGLE_DCHECK_NE(&from, this);
  const _ACT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const _ACT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet._ACT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet._ACT)
    MergeFrom(*source);
  }
}

void _ACT::MergeFrom(const _ACT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet._ACT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_success();
      success_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.success_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000004u) {
      operational_local_id_ = from.operational_local_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void _ACT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet._ACT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void _ACT::CopyFrom(const _ACT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet._ACT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _ACT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void _ACT::Swap(_ACT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _ACT::InternalSwap(_ACT* other) {
  using std::swap;
  success_.Swap(&other->success_);
  error_.Swap(&other->error_);
  swap(operational_local_id_, other->operational_local_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata _ACT::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void _ALIVE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _ALIVE::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_ALIVE::_ALIVE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaults_ALIVE();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet._ALIVE)
}
_ALIVE::_ALIVE(const _ALIVE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:packet._ALIVE)
}

void _ALIVE::SharedCtor() {
  _cached_size_ = 0;
  session_id_ = 0;
}

_ALIVE::~_ALIVE() {
  // @@protoc_insertion_point(destructor:packet._ALIVE)
  SharedDtor();
}

void _ALIVE::SharedDtor() {
}

void _ALIVE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* _ALIVE::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const _ALIVE& _ALIVE::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaults_ALIVE();
  return *internal_default_instance();
}

_ALIVE* _ALIVE::New(::google::protobuf::Arena* arena) const {
  _ALIVE* n = new _ALIVE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _ALIVE::Clear() {
// @@protoc_insertion_point(message_clear_start:packet._ALIVE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool _ALIVE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet._ALIVE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet._ALIVE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet._ALIVE)
  return false;
#undef DO_
}

void _ALIVE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet._ALIVE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->session_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet._ALIVE)
}

::google::protobuf::uint8* _ALIVE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet._ALIVE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->session_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet._ALIVE)
  return target;
}

size_t _ALIVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet._ALIVE)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 session_id = 1;
  if (has_session_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _ALIVE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet._ALIVE)
  GOOGLE_DCHECK_NE(&from, this);
  const _ALIVE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const _ALIVE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet._ALIVE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet._ALIVE)
    MergeFrom(*source);
  }
}

void _ALIVE::MergeFrom(const _ALIVE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet._ALIVE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session_id()) {
    set_session_id(from.session_id());
  }
}

void _ALIVE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet._ALIVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void _ALIVE::CopyFrom(const _ALIVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet._ALIVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _ALIVE::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void _ALIVE::Swap(_ALIVE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _ALIVE::InternalSwap(_ALIVE* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata _ALIVE::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void _CHANGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _CHANGE::kObiectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_CHANGE::_CHANGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaults_CHANGE();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet._CHANGE)
}
_CHANGE::_CHANGE(const _CHANGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obiect_id_ = from.obiect_id_;
  // @@protoc_insertion_point(copy_constructor:packet._CHANGE)
}

void _CHANGE::SharedCtor() {
  _cached_size_ = 0;
  obiect_id_ = 0;
}

_CHANGE::~_CHANGE() {
  // @@protoc_insertion_point(destructor:packet._CHANGE)
  SharedDtor();
}

void _CHANGE::SharedDtor() {
}

void _CHANGE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* _CHANGE::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const _CHANGE& _CHANGE::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaults_CHANGE();
  return *internal_default_instance();
}

_CHANGE* _CHANGE::New(::google::protobuf::Arena* arena) const {
  _CHANGE* n = new _CHANGE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _CHANGE::Clear() {
// @@protoc_insertion_point(message_clear_start:packet._CHANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obiect_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool _CHANGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet._CHANGE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 obiect_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_obiect_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obiect_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet._CHANGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet._CHANGE)
  return false;
#undef DO_
}

void _CHANGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet._CHANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 obiect_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obiect_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet._CHANGE)
}

::google::protobuf::uint8* _CHANGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet._CHANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 obiect_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->obiect_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet._CHANGE)
  return target;
}

size_t _CHANGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet._CHANGE)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 obiect_id = 1;
  if (has_obiect_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obiect_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _CHANGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet._CHANGE)
  GOOGLE_DCHECK_NE(&from, this);
  const _CHANGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const _CHANGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet._CHANGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet._CHANGE)
    MergeFrom(*source);
  }
}

void _CHANGE::MergeFrom(const _CHANGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet._CHANGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_obiect_id()) {
    set_obiect_id(from.obiect_id());
  }
}

void _CHANGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet._CHANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void _CHANGE::CopyFrom(const _CHANGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet._CHANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _CHANGE::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void _CHANGE::Swap(_CHANGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _CHANGE::InternalSwap(_CHANGE* other) {
  using std::swap;
  swap(obiect_id_, other->obiect_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata _CHANGE::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void _OPEARATION::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _OPEARATION::kSessionIdFieldNumber;
const int _OPEARATION::kOperationDescriptionFieldNumber;
const int _OPEARATION::kOperationalLocalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_OPEARATION::_OPEARATION()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaults_OPEARATION();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet._OPEARATION)
}
_OPEARATION::_OPEARATION(const _OPEARATION& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&operational_local_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(operational_local_id_));
  // @@protoc_insertion_point(copy_constructor:packet._OPEARATION)
}

void _OPEARATION::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operational_local_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(operational_local_id_));
}

_OPEARATION::~_OPEARATION() {
  // @@protoc_insertion_point(destructor:packet._OPEARATION)
  SharedDtor();
}

void _OPEARATION::SharedDtor() {
}

void _OPEARATION::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* _OPEARATION::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const _OPEARATION& _OPEARATION::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaults_OPEARATION();
  return *internal_default_instance();
}

_OPEARATION* _OPEARATION::New(::google::protobuf::Arena* arena) const {
  _OPEARATION* n = new _OPEARATION;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _OPEARATION::Clear() {
// @@protoc_insertion_point(message_clear_start:packet._OPEARATION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&operational_local_id_) -
        reinterpret_cast<char*>(&session_id_)) + sizeof(operational_local_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool _OPEARATION::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet._OPEARATION)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 operation_description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_operation_description();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operation_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 operational_local_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_operational_local_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operational_local_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet._OPEARATION)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet._OPEARATION)
  return false;
#undef DO_
}

void _OPEARATION::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet._OPEARATION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->session_id(), output);
  }

  // optional int32 operation_description = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->operation_description(), output);
  }

  // optional int32 operational_local_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->operational_local_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet._OPEARATION)
}

::google::protobuf::uint8* _OPEARATION::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet._OPEARATION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->session_id(), target);
  }

  // optional int32 operation_description = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->operation_description(), target);
  }

  // optional int32 operational_local_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->operational_local_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet._OPEARATION)
  return target;
}

size_t _OPEARATION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet._OPEARATION)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 session_id = 1;
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->session_id());
    }

    // optional int32 operation_description = 2;
    if (has_operation_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operation_description());
    }

    // optional int32 operational_local_id = 3;
    if (has_operational_local_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operational_local_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _OPEARATION::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet._OPEARATION)
  GOOGLE_DCHECK_NE(&from, this);
  const _OPEARATION* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const _OPEARATION>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet._OPEARATION)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet._OPEARATION)
    MergeFrom(*source);
  }
}

void _OPEARATION::MergeFrom(const _OPEARATION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet._OPEARATION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      session_id_ = from.session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      operation_description_ = from.operation_description_;
    }
    if (cached_has_bits & 0x00000004u) {
      operational_local_id_ = from.operational_local_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void _OPEARATION::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet._OPEARATION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void _OPEARATION::CopyFrom(const _OPEARATION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet._OPEARATION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _OPEARATION::IsInitialized() const {
  return true;
}

void _OPEARATION::Swap(_OPEARATION* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _OPEARATION::InternalSwap(_OPEARATION* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(operation_description_, other->operation_description_);
  swap(operational_local_id_, other->operational_local_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata _OPEARATION::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void _QUERY::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _QUERY::kSessionIdFieldNumber;
const int _QUERY::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_QUERY::_QUERY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaults_QUERY();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet._QUERY)
}
_QUERY::_QUERY(const _QUERY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&object_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(object_id_));
  // @@protoc_insertion_point(copy_constructor:packet._QUERY)
}

void _QUERY::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&object_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(object_id_));
}

_QUERY::~_QUERY() {
  // @@protoc_insertion_point(destructor:packet._QUERY)
  SharedDtor();
}

void _QUERY::SharedDtor() {
}

void _QUERY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* _QUERY::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const _QUERY& _QUERY::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaults_QUERY();
  return *internal_default_instance();
}

_QUERY* _QUERY::New(::google::protobuf::Arena* arena) const {
  _QUERY* n = new _QUERY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _QUERY::Clear() {
// @@protoc_insertion_point(message_clear_start:packet._QUERY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&object_id_) -
        reinterpret_cast<char*>(&session_id_)) + sizeof(object_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool _QUERY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet._QUERY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_object_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet._QUERY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet._QUERY)
  return false;
#undef DO_
}

void _QUERY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet._QUERY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->session_id(), output);
  }

  // optional int32 object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet._QUERY)
}

::google::protobuf::uint8* _QUERY::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet._QUERY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->session_id(), target);
  }

  // optional int32 object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet._QUERY)
  return target;
}

size_t _QUERY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet._QUERY)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 session_id = 1;
  if (has_session_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session_id());
  }
  // optional int32 object_id = 2;
  if (has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _QUERY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet._QUERY)
  GOOGLE_DCHECK_NE(&from, this);
  const _QUERY* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const _QUERY>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet._QUERY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet._QUERY)
    MergeFrom(*source);
  }
}

void _QUERY::MergeFrom(const _QUERY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet._QUERY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      session_id_ = from.session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      object_id_ = from.object_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void _QUERY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet._QUERY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void _QUERY::CopyFrom(const _QUERY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet._QUERY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _QUERY::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void _QUERY::Swap(_QUERY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _QUERY::InternalSwap(_QUERY* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(object_id_, other->object_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata _QUERY::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void _QUERY_RESPONSE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _QUERY_RESPONSE::kSessionIdFieldNumber;
const int _QUERY_RESPONSE::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

_QUERY_RESPONSE::_QUERY_RESPONSE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cppQ_2eproto::InitDefaults_QUERY_RESPONSE();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet._QUERY_RESPONSE)
}
_QUERY_RESPONSE::_QUERY_RESPONSE(const _QUERY_RESPONSE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&object_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(object_id_));
  // @@protoc_insertion_point(copy_constructor:packet._QUERY_RESPONSE)
}

void _QUERY_RESPONSE::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&object_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(object_id_));
}

_QUERY_RESPONSE::~_QUERY_RESPONSE() {
  // @@protoc_insertion_point(destructor:packet._QUERY_RESPONSE)
  SharedDtor();
}

void _QUERY_RESPONSE::SharedDtor() {
}

void _QUERY_RESPONSE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* _QUERY_RESPONSE::descriptor() {
  ::protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const _QUERY_RESPONSE& _QUERY_RESPONSE::default_instance() {
  ::protobuf_cppQ_2eproto::InitDefaults_QUERY_RESPONSE();
  return *internal_default_instance();
}

_QUERY_RESPONSE* _QUERY_RESPONSE::New(::google::protobuf::Arena* arena) const {
  _QUERY_RESPONSE* n = new _QUERY_RESPONSE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void _QUERY_RESPONSE::Clear() {
// @@protoc_insertion_point(message_clear_start:packet._QUERY_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&object_id_) -
        reinterpret_cast<char*>(&session_id_)) + sizeof(object_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool _QUERY_RESPONSE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet._QUERY_RESPONSE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 object_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_object_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet._QUERY_RESPONSE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet._QUERY_RESPONSE)
  return false;
#undef DO_
}

void _QUERY_RESPONSE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet._QUERY_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->session_id(), output);
  }

  // optional int32 object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->object_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:packet._QUERY_RESPONSE)
}

::google::protobuf::uint8* _QUERY_RESPONSE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet._QUERY_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->session_id(), target);
  }

  // optional int32 object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->object_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet._QUERY_RESPONSE)
  return target;
}

size_t _QUERY_RESPONSE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet._QUERY_RESPONSE)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 session_id = 1;
  if (has_session_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session_id());
  }
  // optional int32 object_id = 2;
  if (has_object_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void _QUERY_RESPONSE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet._QUERY_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  const _QUERY_RESPONSE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const _QUERY_RESPONSE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet._QUERY_RESPONSE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet._QUERY_RESPONSE)
    MergeFrom(*source);
  }
}

void _QUERY_RESPONSE::MergeFrom(const _QUERY_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet._QUERY_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      session_id_ = from.session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      object_id_ = from.object_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void _QUERY_RESPONSE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet._QUERY_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void _QUERY_RESPONSE::CopyFrom(const _QUERY_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet._QUERY_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool _QUERY_RESPONSE::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void _QUERY_RESPONSE::Swap(_QUERY_RESPONSE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void _QUERY_RESPONSE::InternalSwap(_QUERY_RESPONSE* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(object_id_, other->object_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata _QUERY_RESPONSE::GetMetadata() const {
  protobuf_cppQ_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cppQ_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _ACT::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
    ::google::protobuf::internal::MessageTypeTraits< ::packet::_ACT >, 11, false >
  _ACT::type(kTypeFieldNumber, *::packet::_ACT::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _ALIVE::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
    ::google::protobuf::internal::MessageTypeTraits< ::packet::_ALIVE >, 11, false >
  _ALIVE::type(kTypeFieldNumber, *::packet::_ALIVE::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _CHANGE::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
    ::google::protobuf::internal::MessageTypeTraits< ::packet::_CHANGE >, 11, false >
  _CHANGE::type(kTypeFieldNumber, *::packet::_CHANGE::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _OPEARATION::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
    ::google::protobuf::internal::MessageTypeTraits< ::packet::_OPEARATION >, 11, false >
  _OPEARATION::type(kTypeFieldNumber, *::packet::_OPEARATION::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _QUERY::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
    ::google::protobuf::internal::MessageTypeTraits< ::packet::_QUERY >, 11, false >
  _QUERY::type(kTypeFieldNumber, *::packet::_QUERY::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int _QUERY_RESPONSE::kTypeFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
    ::google::protobuf::internal::MessageTypeTraits< ::packet::_QUERY_RESPONSE >, 11, false >
  _QUERY_RESPONSE::type(kTypeFieldNumber, *::packet::_QUERY_RESPONSE::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace packet

// @@protoc_insertion_point(global_scope)
