// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cppQ.proto

#ifndef PROTOBUF_cppQ_2eproto__INCLUDED
#define PROTOBUF_cppQ_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_cppQ_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPACKETImpl();
void InitDefaultsPACKET();
void InitDefaults_ACTImpl();
void InitDefaults_ACT();
void InitDefaults_ALIVEImpl();
void InitDefaults_ALIVE();
void InitDefaults_CHANGEImpl();
void InitDefaults_CHANGE();
void InitDefaults_OPEARATIONImpl();
void InitDefaults_OPEARATION();
void InitDefaults_QUERYImpl();
void InitDefaults_QUERY();
void InitDefaults_QUERY_RESPONSEImpl();
void InitDefaults_QUERY_RESPONSE();
inline void InitDefaults() {
  InitDefaultsPACKET();
  InitDefaults_ACT();
  InitDefaults_ALIVE();
  InitDefaults_CHANGE();
  InitDefaults_OPEARATION();
  InitDefaults_QUERY();
  InitDefaults_QUERY_RESPONSE();
}
}  // namespace protobuf_cppQ_2eproto
namespace packet {
class PACKET;
class PACKETDefaultTypeInternal;
extern PACKETDefaultTypeInternal _PACKET_default_instance_;
class _ACT;
class _ACTDefaultTypeInternal;
extern _ACTDefaultTypeInternal __ACT_default_instance_;
class _ALIVE;
class _ALIVEDefaultTypeInternal;
extern _ALIVEDefaultTypeInternal __ALIVE_default_instance_;
class _CHANGE;
class _CHANGEDefaultTypeInternal;
extern _CHANGEDefaultTypeInternal __CHANGE_default_instance_;
class _OPEARATION;
class _OPEARATIONDefaultTypeInternal;
extern _OPEARATIONDefaultTypeInternal __OPEARATION_default_instance_;
class _QUERY;
class _QUERYDefaultTypeInternal;
extern _QUERYDefaultTypeInternal __QUERY_default_instance_;
class _QUERY_RESPONSE;
class _QUERY_RESPONSEDefaultTypeInternal;
extern _QUERY_RESPONSEDefaultTypeInternal __QUERY_RESPONSE_default_instance_;
}  // namespace packet
namespace packet {

enum PACKET_PacketType {
  PACKET_PacketType__ACK = 1,
  PACKET_PacketType__ALIVE = 2,
  PACKET_PacketType__CHANGE = 3,
  PACKET_PacketType__LOGIN = 4,
  PACKET_PacketType__OPERATION = 5,
  PACKET_PacketType__QUERY = 6,
  PACKET_PacketType__QUERY_RESPONSE = 7
};
bool PACKET_PacketType_IsValid(int value);
const PACKET_PacketType PACKET_PacketType_PacketType_MIN = PACKET_PacketType__ACK;
const PACKET_PacketType PACKET_PacketType_PacketType_MAX = PACKET_PacketType__QUERY_RESPONSE;
const int PACKET_PacketType_PacketType_ARRAYSIZE = PACKET_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PACKET_PacketType_descriptor();
inline const ::std::string& PACKET_PacketType_Name(PACKET_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PACKET_PacketType_descriptor(), value);
}
inline bool PACKET_PacketType_Parse(
    const ::std::string& name, PACKET_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PACKET_PacketType>(
    PACKET_PacketType_descriptor(), name, value);
}
// ===================================================================

class PACKET : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet.PACKET) */ {
 public:
  PACKET();
  virtual ~PACKET();

  PACKET(const PACKET& from);

  inline PACKET& operator=(const PACKET& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PACKET(PACKET&& from) noexcept
    : PACKET() {
    *this = ::std::move(from);
  }

  inline PACKET& operator=(PACKET&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PACKET& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PACKET* internal_default_instance() {
    return reinterpret_cast<const PACKET*>(
               &_PACKET_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PACKET* other);
  friend void swap(PACKET& a, PACKET& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PACKET* New() const PROTOBUF_FINAL { return New(NULL); }

  PACKET* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PACKET& from);
  void MergeFrom(const PACKET& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PACKET* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PACKET_PacketType PacketType;
  static const PacketType _ACK =
    PACKET_PacketType__ACK;
  static const PacketType _ALIVE =
    PACKET_PacketType__ALIVE;
  static const PacketType _CHANGE =
    PACKET_PacketType__CHANGE;
  static const PacketType _LOGIN =
    PACKET_PacketType__LOGIN;
  static const PacketType _OPERATION =
    PACKET_PacketType__OPERATION;
  static const PacketType _QUERY =
    PACKET_PacketType__QUERY;
  static const PacketType _QUERY_RESPONSE =
    PACKET_PacketType__QUERY_RESPONSE;
  static inline bool PacketType_IsValid(int value) {
    return PACKET_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    PACKET_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    PACKET_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    PACKET_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return PACKET_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return PACKET_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return PACKET_PacketType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // required .packet.PACKET.PacketType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::packet::PACKET_PacketType type() const;
  void set_type(::packet::PACKET_PacketType value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(PACKET)
  // @@protoc_insertion_point(class_scope:packet.PACKET)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_code();
  void clear_has_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 code_;
  int type_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaultsPACKETImpl();
};
// -------------------------------------------------------------------

class _ACT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet._ACT) */ {
 public:
  _ACT();
  virtual ~_ACT();

  _ACT(const _ACT& from);

  inline _ACT& operator=(const _ACT& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  _ACT(_ACT&& from) noexcept
    : _ACT() {
    *this = ::std::move(from);
  }

  inline _ACT& operator=(_ACT&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const _ACT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const _ACT* internal_default_instance() {
    return reinterpret_cast<const _ACT*>(
               &__ACT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(_ACT* other);
  friend void swap(_ACT& a, _ACT& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline _ACT* New() const PROTOBUF_FINAL { return New(NULL); }

  _ACT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const _ACT& from);
  void MergeFrom(const _ACT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(_ACT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string success = 2;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  const ::std::string& success() const;
  void set_success(const ::std::string& value);
  #if LANG_CXX11
  void set_success(::std::string&& value);
  #endif
  void set_success(const char* value);
  void set_success(const char* value, size_t size);
  ::std::string* mutable_success();
  ::std::string* release_success();
  void set_allocated_success(::std::string* success);

  // optional string error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // required int32 operational_local_id = 1;
  bool has_operational_local_id() const;
  void clear_operational_local_id();
  static const int kOperationalLocalIdFieldNumber = 1;
  ::google::protobuf::int32 operational_local_id() const;
  void set_operational_local_id(::google::protobuf::int32 value);

  static const int kTypeFieldNumber = 100;
  static ::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
      ::google::protobuf::internal::MessageTypeTraits< ::packet::_ACT >, 11, false >
    type;
  // @@protoc_insertion_point(class_scope:packet._ACT)
 private:
  void set_has_operational_local_id();
  void clear_has_operational_local_id();
  void set_has_success();
  void clear_has_success();
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr success_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::int32 operational_local_id_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaults_ACTImpl();
};
// -------------------------------------------------------------------

class _ALIVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet._ALIVE) */ {
 public:
  _ALIVE();
  virtual ~_ALIVE();

  _ALIVE(const _ALIVE& from);

  inline _ALIVE& operator=(const _ALIVE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  _ALIVE(_ALIVE&& from) noexcept
    : _ALIVE() {
    *this = ::std::move(from);
  }

  inline _ALIVE& operator=(_ALIVE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const _ALIVE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const _ALIVE* internal_default_instance() {
    return reinterpret_cast<const _ALIVE*>(
               &__ALIVE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(_ALIVE* other);
  friend void swap(_ALIVE& a, _ALIVE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline _ALIVE* New() const PROTOBUF_FINAL { return New(NULL); }

  _ALIVE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const _ALIVE& from);
  void MergeFrom(const _ALIVE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(_ALIVE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  static const int kTypeFieldNumber = 101;
  static ::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
      ::google::protobuf::internal::MessageTypeTraits< ::packet::_ALIVE >, 11, false >
    type;
  // @@protoc_insertion_point(class_scope:packet._ALIVE)
 private:
  void set_has_session_id();
  void clear_has_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 session_id_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaults_ALIVEImpl();
};
// -------------------------------------------------------------------

class _CHANGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet._CHANGE) */ {
 public:
  _CHANGE();
  virtual ~_CHANGE();

  _CHANGE(const _CHANGE& from);

  inline _CHANGE& operator=(const _CHANGE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  _CHANGE(_CHANGE&& from) noexcept
    : _CHANGE() {
    *this = ::std::move(from);
  }

  inline _CHANGE& operator=(_CHANGE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const _CHANGE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const _CHANGE* internal_default_instance() {
    return reinterpret_cast<const _CHANGE*>(
               &__CHANGE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(_CHANGE* other);
  friend void swap(_CHANGE& a, _CHANGE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline _CHANGE* New() const PROTOBUF_FINAL { return New(NULL); }

  _CHANGE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const _CHANGE& from);
  void MergeFrom(const _CHANGE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(_CHANGE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 obiect_id = 1;
  bool has_obiect_id() const;
  void clear_obiect_id();
  static const int kObiectIdFieldNumber = 1;
  ::google::protobuf::int32 obiect_id() const;
  void set_obiect_id(::google::protobuf::int32 value);

  static const int kTypeFieldNumber = 102;
  static ::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
      ::google::protobuf::internal::MessageTypeTraits< ::packet::_CHANGE >, 11, false >
    type;
  // @@protoc_insertion_point(class_scope:packet._CHANGE)
 private:
  void set_has_obiect_id();
  void clear_has_obiect_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 obiect_id_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaults_CHANGEImpl();
};
// -------------------------------------------------------------------

class _OPEARATION : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet._OPEARATION) */ {
 public:
  _OPEARATION();
  virtual ~_OPEARATION();

  _OPEARATION(const _OPEARATION& from);

  inline _OPEARATION& operator=(const _OPEARATION& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  _OPEARATION(_OPEARATION&& from) noexcept
    : _OPEARATION() {
    *this = ::std::move(from);
  }

  inline _OPEARATION& operator=(_OPEARATION&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const _OPEARATION& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const _OPEARATION* internal_default_instance() {
    return reinterpret_cast<const _OPEARATION*>(
               &__OPEARATION_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(_OPEARATION* other);
  friend void swap(_OPEARATION& a, _OPEARATION& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline _OPEARATION* New() const PROTOBUF_FINAL { return New(NULL); }

  _OPEARATION* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const _OPEARATION& from);
  void MergeFrom(const _OPEARATION& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(_OPEARATION* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 operation_description = 2;
  bool has_operation_description() const;
  void clear_operation_description();
  static const int kOperationDescriptionFieldNumber = 2;
  ::google::protobuf::int32 operation_description() const;
  void set_operation_description(::google::protobuf::int32 value);

  // optional int32 operational_local_id = 3;
  bool has_operational_local_id() const;
  void clear_operational_local_id();
  static const int kOperationalLocalIdFieldNumber = 3;
  ::google::protobuf::int32 operational_local_id() const;
  void set_operational_local_id(::google::protobuf::int32 value);

  static const int kTypeFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
      ::google::protobuf::internal::MessageTypeTraits< ::packet::_OPEARATION >, 11, false >
    type;
  // @@protoc_insertion_point(class_scope:packet._OPEARATION)
 private:
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_operation_description();
  void clear_has_operation_description();
  void set_has_operational_local_id();
  void clear_has_operational_local_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 operation_description_;
  ::google::protobuf::int32 operational_local_id_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaults_OPEARATIONImpl();
};
// -------------------------------------------------------------------

class _QUERY : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet._QUERY) */ {
 public:
  _QUERY();
  virtual ~_QUERY();

  _QUERY(const _QUERY& from);

  inline _QUERY& operator=(const _QUERY& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  _QUERY(_QUERY&& from) noexcept
    : _QUERY() {
    *this = ::std::move(from);
  }

  inline _QUERY& operator=(_QUERY&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const _QUERY& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const _QUERY* internal_default_instance() {
    return reinterpret_cast<const _QUERY*>(
               &__QUERY_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(_QUERY* other);
  friend void swap(_QUERY& a, _QUERY& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline _QUERY* New() const PROTOBUF_FINAL { return New(NULL); }

  _QUERY* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const _QUERY& from);
  void MergeFrom(const _QUERY& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(_QUERY* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 object_id = 2;
  bool has_object_id() const;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  ::google::protobuf::int32 object_id() const;
  void set_object_id(::google::protobuf::int32 value);

  static const int kTypeFieldNumber = 104;
  static ::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
      ::google::protobuf::internal::MessageTypeTraits< ::packet::_QUERY >, 11, false >
    type;
  // @@protoc_insertion_point(class_scope:packet._QUERY)
 private:
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_object_id();
  void clear_has_object_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 object_id_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaults_QUERYImpl();
};
// -------------------------------------------------------------------

class _QUERY_RESPONSE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet._QUERY_RESPONSE) */ {
 public:
  _QUERY_RESPONSE();
  virtual ~_QUERY_RESPONSE();

  _QUERY_RESPONSE(const _QUERY_RESPONSE& from);

  inline _QUERY_RESPONSE& operator=(const _QUERY_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  _QUERY_RESPONSE(_QUERY_RESPONSE&& from) noexcept
    : _QUERY_RESPONSE() {
    *this = ::std::move(from);
  }

  inline _QUERY_RESPONSE& operator=(_QUERY_RESPONSE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const _QUERY_RESPONSE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const _QUERY_RESPONSE* internal_default_instance() {
    return reinterpret_cast<const _QUERY_RESPONSE*>(
               &__QUERY_RESPONSE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(_QUERY_RESPONSE* other);
  friend void swap(_QUERY_RESPONSE& a, _QUERY_RESPONSE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline _QUERY_RESPONSE* New() const PROTOBUF_FINAL { return New(NULL); }

  _QUERY_RESPONSE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const _QUERY_RESPONSE& from);
  void MergeFrom(const _QUERY_RESPONSE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(_QUERY_RESPONSE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 object_id = 2;
  bool has_object_id() const;
  void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  ::google::protobuf::int32 object_id() const;
  void set_object_id(::google::protobuf::int32 value);

  static const int kTypeFieldNumber = 105;
  static ::google::protobuf::internal::ExtensionIdentifier< ::packet::PACKET,
      ::google::protobuf::internal::MessageTypeTraits< ::packet::_QUERY_RESPONSE >, 11, false >
    type;
  // @@protoc_insertion_point(class_scope:packet._QUERY_RESPONSE)
 private:
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_object_id();
  void clear_has_object_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 object_id_;
  friend struct ::protobuf_cppQ_2eproto::TableStruct;
  friend void ::protobuf_cppQ_2eproto::InitDefaults_QUERY_RESPONSEImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PACKET

// required .packet.PACKET.PacketType type = 1;
inline bool PACKET::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PACKET::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PACKET::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PACKET::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::packet::PACKET_PacketType PACKET::type() const {
  // @@protoc_insertion_point(field_get:packet.PACKET.type)
  return static_cast< ::packet::PACKET_PacketType >(type_);
}
inline void PACKET::set_type(::packet::PACKET_PacketType value) {
  assert(::packet::PACKET_PacketType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:packet.PACKET.type)
}

// required int32 code = 2;
inline bool PACKET::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PACKET::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PACKET::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PACKET::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 PACKET::code() const {
  // @@protoc_insertion_point(field_get:packet.PACKET.code)
  return code_;
}
inline void PACKET::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:packet.PACKET.code)
}

// -------------------------------------------------------------------

// _ACT

// required int32 operational_local_id = 1;
inline bool _ACT::has_operational_local_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void _ACT::set_has_operational_local_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void _ACT::clear_has_operational_local_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void _ACT::clear_operational_local_id() {
  operational_local_id_ = 0;
  clear_has_operational_local_id();
}
inline ::google::protobuf::int32 _ACT::operational_local_id() const {
  // @@protoc_insertion_point(field_get:packet._ACT.operational_local_id)
  return operational_local_id_;
}
inline void _ACT::set_operational_local_id(::google::protobuf::int32 value) {
  set_has_operational_local_id();
  operational_local_id_ = value;
  // @@protoc_insertion_point(field_set:packet._ACT.operational_local_id)
}

// optional string success = 2;
inline bool _ACT::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void _ACT::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void _ACT::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void _ACT::clear_success() {
  success_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_success();
}
inline const ::std::string& _ACT::success() const {
  // @@protoc_insertion_point(field_get:packet._ACT.success)
  return success_.GetNoArena();
}
inline void _ACT::set_success(const ::std::string& value) {
  set_has_success();
  success_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet._ACT.success)
}
#if LANG_CXX11
inline void _ACT::set_success(::std::string&& value) {
  set_has_success();
  success_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:packet._ACT.success)
}
#endif
inline void _ACT::set_success(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_success();
  success_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet._ACT.success)
}
inline void _ACT::set_success(const char* value, size_t size) {
  set_has_success();
  success_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet._ACT.success)
}
inline ::std::string* _ACT::mutable_success() {
  set_has_success();
  // @@protoc_insertion_point(field_mutable:packet._ACT.success)
  return success_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* _ACT::release_success() {
  // @@protoc_insertion_point(field_release:packet._ACT.success)
  clear_has_success();
  return success_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void _ACT::set_allocated_success(::std::string* success) {
  if (success != NULL) {
    set_has_success();
  } else {
    clear_has_success();
  }
  success_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), success);
  // @@protoc_insertion_point(field_set_allocated:packet._ACT.success)
}

// optional string error = 3;
inline bool _ACT::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void _ACT::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void _ACT::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void _ACT::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& _ACT::error() const {
  // @@protoc_insertion_point(field_get:packet._ACT.error)
  return error_.GetNoArena();
}
inline void _ACT::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet._ACT.error)
}
#if LANG_CXX11
inline void _ACT::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:packet._ACT.error)
}
#endif
inline void _ACT::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet._ACT.error)
}
inline void _ACT::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet._ACT.error)
}
inline ::std::string* _ACT::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:packet._ACT.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* _ACT::release_error() {
  // @@protoc_insertion_point(field_release:packet._ACT.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void _ACT::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:packet._ACT.error)
}

// -------------------------------------------------------------------

// _ALIVE

// required int32 session_id = 1;
inline bool _ALIVE::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void _ALIVE::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void _ALIVE::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void _ALIVE::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 _ALIVE::session_id() const {
  // @@protoc_insertion_point(field_get:packet._ALIVE.session_id)
  return session_id_;
}
inline void _ALIVE::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:packet._ALIVE.session_id)
}

// -------------------------------------------------------------------

// _CHANGE

// required int32 obiect_id = 1;
inline bool _CHANGE::has_obiect_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void _CHANGE::set_has_obiect_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void _CHANGE::clear_has_obiect_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void _CHANGE::clear_obiect_id() {
  obiect_id_ = 0;
  clear_has_obiect_id();
}
inline ::google::protobuf::int32 _CHANGE::obiect_id() const {
  // @@protoc_insertion_point(field_get:packet._CHANGE.obiect_id)
  return obiect_id_;
}
inline void _CHANGE::set_obiect_id(::google::protobuf::int32 value) {
  set_has_obiect_id();
  obiect_id_ = value;
  // @@protoc_insertion_point(field_set:packet._CHANGE.obiect_id)
}

// -------------------------------------------------------------------

// _OPEARATION

// optional int32 session_id = 1;
inline bool _OPEARATION::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void _OPEARATION::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void _OPEARATION::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void _OPEARATION::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 _OPEARATION::session_id() const {
  // @@protoc_insertion_point(field_get:packet._OPEARATION.session_id)
  return session_id_;
}
inline void _OPEARATION::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:packet._OPEARATION.session_id)
}

// optional int32 operation_description = 2;
inline bool _OPEARATION::has_operation_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void _OPEARATION::set_has_operation_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void _OPEARATION::clear_has_operation_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void _OPEARATION::clear_operation_description() {
  operation_description_ = 0;
  clear_has_operation_description();
}
inline ::google::protobuf::int32 _OPEARATION::operation_description() const {
  // @@protoc_insertion_point(field_get:packet._OPEARATION.operation_description)
  return operation_description_;
}
inline void _OPEARATION::set_operation_description(::google::protobuf::int32 value) {
  set_has_operation_description();
  operation_description_ = value;
  // @@protoc_insertion_point(field_set:packet._OPEARATION.operation_description)
}

// optional int32 operational_local_id = 3;
inline bool _OPEARATION::has_operational_local_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void _OPEARATION::set_has_operational_local_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void _OPEARATION::clear_has_operational_local_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void _OPEARATION::clear_operational_local_id() {
  operational_local_id_ = 0;
  clear_has_operational_local_id();
}
inline ::google::protobuf::int32 _OPEARATION::operational_local_id() const {
  // @@protoc_insertion_point(field_get:packet._OPEARATION.operational_local_id)
  return operational_local_id_;
}
inline void _OPEARATION::set_operational_local_id(::google::protobuf::int32 value) {
  set_has_operational_local_id();
  operational_local_id_ = value;
  // @@protoc_insertion_point(field_set:packet._OPEARATION.operational_local_id)
}

// -------------------------------------------------------------------

// _QUERY

// required int32 session_id = 1;
inline bool _QUERY::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void _QUERY::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void _QUERY::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void _QUERY::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 _QUERY::session_id() const {
  // @@protoc_insertion_point(field_get:packet._QUERY.session_id)
  return session_id_;
}
inline void _QUERY::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:packet._QUERY.session_id)
}

// optional int32 object_id = 2;
inline bool _QUERY::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void _QUERY::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void _QUERY::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void _QUERY::clear_object_id() {
  object_id_ = 0;
  clear_has_object_id();
}
inline ::google::protobuf::int32 _QUERY::object_id() const {
  // @@protoc_insertion_point(field_get:packet._QUERY.object_id)
  return object_id_;
}
inline void _QUERY::set_object_id(::google::protobuf::int32 value) {
  set_has_object_id();
  object_id_ = value;
  // @@protoc_insertion_point(field_set:packet._QUERY.object_id)
}

// -------------------------------------------------------------------

// _QUERY_RESPONSE

// required int32 session_id = 1;
inline bool _QUERY_RESPONSE::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void _QUERY_RESPONSE::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void _QUERY_RESPONSE::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void _QUERY_RESPONSE::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 _QUERY_RESPONSE::session_id() const {
  // @@protoc_insertion_point(field_get:packet._QUERY_RESPONSE.session_id)
  return session_id_;
}
inline void _QUERY_RESPONSE::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:packet._QUERY_RESPONSE.session_id)
}

// optional int32 object_id = 2;
inline bool _QUERY_RESPONSE::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void _QUERY_RESPONSE::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void _QUERY_RESPONSE::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void _QUERY_RESPONSE::clear_object_id() {
  object_id_ = 0;
  clear_has_object_id();
}
inline ::google::protobuf::int32 _QUERY_RESPONSE::object_id() const {
  // @@protoc_insertion_point(field_get:packet._QUERY_RESPONSE.object_id)
  return object_id_;
}
inline void _QUERY_RESPONSE::set_object_id(::google::protobuf::int32 value) {
  set_has_object_id();
  object_id_ = value;
  // @@protoc_insertion_point(field_set:packet._QUERY_RESPONSE.object_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::packet::PACKET_PacketType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::packet::PACKET_PacketType>() {
  return ::packet::PACKET_PacketType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cppQ_2eproto__INCLUDED
